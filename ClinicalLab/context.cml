Domain ExamPerformingProcessBLab {
    Subdomain ExamPerformingProcess
    Subdomain Dashboard
}

ContextMap {
    contains ExamPerformingProcess
    contains Dashboard

    Dashboard Shared-Kernel ExamPerformingProcess
}


BoundedContext ExamPerformingProcess implements ExamPerformingProcess {
    Aggregate Person {
        Entity Person {
            aggregateRoot
            -PersonId id
            -Cpf cpf
            -Email contactEmail
            String name
            Date birthDate
        }
        
        ValueObject PersonId {
            int id
        }

        ValueObject Cpf {
            String cpf
        }

        ValueObject Email {
            String emailText
        }
    }

    Aggregate Client {
        Entity Client extends Person {
            aggregateRoot
            -ClientId id
        }

        ValueObject ClientId {
            int id
        }
    }

    Aggregate Attendant {
        Entity Attendant extends Person {
            aggregateRoot
            -AttendantId id
            String password
        }

        ValueObject AttendantId {
            int id
        }
    }

    Aggregate ServiceNumber {
        Entity ServiceNumber {
            aggregateRoot
            -ServiceNumberId id
            String number
            boolean isPriority
            String status
        }

        ValueObject ServiceNumberId {
            int id
        }
    }

    Aggregate ExamRequest {
        Entity ExamRequest {
            aggregateRoot
            -ExamRequestId id
            -ClientId clientId
            -List<ExamTestId> examTestList
            Date requestDate
            Double totalPrice
            String paymentMethod
            String status
        }

        ValueObject ExamRequestId {
            int id
        }
    }

    Aggregate ExamTest {
        Entity ExamTest {
            aggregateRoot
            -ExamTestId id
            -ExamId examId
            -TestResultId testResultId nullable
        }

        ValueObject ExamTestId {
            int id
        }
    }

    Aggregate Exam {
        Entity Exam {
            aggregateRoot
            -ExamId id
            String name
            String requirements
            Double price
            int analysisTime
        }

        ValueObject ExamId {
            int id
        }
    }

    Aggregate TestResult {
        Entity TestResult {
            aggregateRoot
            -TestResultId id
            Date resultDate
            String resultContent
        }

        ValueObject TestResultId {
            int id
        }
    }

    Aggregate ClientService {
        Entity ClientService {
            aggregateRoot
            -ClientServiceId id
            -ServiceNumberId serviceNumberId
            -ExamRequestId examRequestId nullable
            String status
        }

        ValueObject ClientServiceId {
            int id
        }
        
        
  }
}

BoundedContext Dashboard implements Dashboard {
    Aggregate ServiceOverview {
        ValueObject ServiceStatus {
            aggregateRoot
            int waitingClients
            int clientsInCollection
            int completedServices
        }

        ValueObject FinancialOverview {
            int privatePayments
            int insurancePayments
        }

 
        ValueObject Period {
            Date periodStart
            Date periodEnd
        }
    }
}
