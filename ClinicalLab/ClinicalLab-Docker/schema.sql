
    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;

    create table attendants (
        attendant_id integer unique,
        id integer not null,
        password varchar(255),
        primary key (id)
    );

    create table clients (
        client_id integer unique,
        id integer not null,
        primary key (id)
    );

    create table clients_service (
        exam_request_id integer unique,
        service_number_id integer unique,
        client_service_id bigint generated by default as identity,
        status varchar(255),
        primary key (client_service_id)
    );

    create table exam_request (
        client_id integer,
        exam_request_id integer generated by default as identity,
        request_date date not null,
        total_price float(53),
        payment_method varchar(255) not null,
        status varchar(255) not null,
        primary key (exam_request_id)
    );

    create table exam_test (
        exam_id integer,
        exam_test_id integer generated by default as identity,
        exams_list_id integer,
        test_result_id integer unique,
        status varchar(255),
        primary key (exam_test_id)
    );

    create table exams (
        analysis_time integer,
        id integer generated by default as identity,
        price float(53),
        name varchar(255),
        requirements varchar(255),
        primary key (id)
    );

    create table people (
        birth_date date,
        id integer generated by default as identity,
        contact_email varchar(255),
        cpf varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table service_number (
        id integer generated by default as identity,
        is_priority boolean not null,
        number varchar(255),
        status varchar(255),
        primary key (id)
    );

    create table test_result (
        result_date date not null,
        test_result_id integer generated by default as identity,
        result_content varchar(255),
        primary key (test_result_id)
    );

    alter table if exists attendants 
       add constraint FKpfkslasdk918vyu3qwrsuum2w 
       foreign key (id) 
       references people;

    alter table if exists clients 
       add constraint FKkujwxi9ys82vxhwt5m6u4ico8 
       foreign key (id) 
       references people;

    alter table if exists clients_service 
       add constraint FKlykihwkc6rnh0k8rorjiswr4b 
       foreign key (exam_request_id) 
       references exam_request;

    alter table if exists clients_service 
       add constraint FKpv4c96jlugkq1v7g3yd6cim92 
       foreign key (service_number_id) 
       references service_number;

    alter table if exists exam_request 
       add constraint FKnohkmft2wt9p7trvnrg6ssqin 
       foreign key (client_id) 
       references clients;

    alter table if exists exam_test 
       add constraint FKhimpkmg65dpj7n3qd8nys6ejs 
       foreign key (exam_id) 
       references exams;

    alter table if exists exam_test 
       add constraint FKl8ckoik7j4d5ktpgqxge4dfvt 
       foreign key (test_result_id) 
       references test_result;

    alter table if exists exam_test 
       add constraint FKqhr5sgfpkjb6cucg6vk7uljwi 
       foreign key (exams_list_id) 
       references exam_request;
